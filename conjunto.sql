/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 15.0 		*/
/*  Created On : 14-dic.-2022 8:56:20 p.Â m. 				*/
/*  DBMS       : Oracle 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Apartamento CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Bloque CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Concepto CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Conjunto CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Cuenta_Cobro CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Espacio_Comun CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Pago CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Parqueadero CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Persona CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Reserva CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Residente CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

begin
	EXECUTE IMMEDIATE 'DROP TABLE   Responsable CASCADE CONSTRAINTS';
	EXCEPTION WHEN OTHERS THEN NULL;
end;
/

/* Create Tables */

CREATE TABLE  Apartamento
(
	K_NUMAPTO NUMBER(3) NOT NULL,
	N_TAMANIO NUMBER(4,2) NOT NULL,
	V_COEFICIENTE NUMBER(3) NOT NULL,
	K_BLOQUE varchar(3) NOT NULL,
	K_PARQUEADERO NUMBER(3) NULL
)
;

CREATE TABLE  Bloque
(
	K_BLOQUE varchar(3) NOT NULL,
	N_NOMBLOQUE varchar(10) NOT NULL,
	K_CONJUNTO varchar(6) NOT NULL
)
;

CREATE TABLE  Concepto
(
	K_DETALLE NUMBER(7) NOT NULL,
	N_DESCRIPCION varchar(200) NULL,
	N_CONCEPTO varchar(200) NULL,
	V_VALORCONCEP NUMBER(10,2) NULL,
	V_INTERES NUMBER(3) NULL,
	K_CUENTACOBRO NUMBER(7) NOT NULL
)
;

CREATE TABLE  Conjunto
(
	K_CONJUNTO varchar(6) NOT NULL,
	N_DIRECCION varchar(50) NOT NULL,
	N_NOMCONJUNTO varchar(50) NOT NULL
)
;

CREATE TABLE  Cuenta_Cobro
(
	K_CUENTACOBRO NUMBER(7) NOT NULL,
	N_DESCRIPCION VARCHAR(200) NULL,
	F_PORDINARIO DATE NOT NULL,
	N_ANIO varchar(4) NOT NULL,
	K_NUMAPTO NUMBER(3) NOT NULL
)
;

CREATE TABLE  Espacio_Comun
(
	K_ESPACIO varchar(5) NOT NULL,
	N_TIPOESP varchar(3) NOT NULL,
	V_ALQUILERESP NUMBER(7) NOT NULL,
	K_CONJUNTO varchar(6) NOT NULL
)
;

CREATE TABLE  Pago
(
	K_PAGO NUMBER(8) NOT NULL,
	F_PAGO DATE NULL,
	N_FORMAPAGO VARCHAR(3) NULL,
	N_ESTADO varchar(3) NULL,
	K_CUENTACOBRO NUMBER(7) NULL,
	V_TOTAL NUMBER(8,2) NULL
)
;

CREATE TABLE  Parqueadero
(
	K_PARQUEADERO NUMBER(3) NOT NULL,
	N_TIPOPAR varchar(3) NOT NULL
)
;

CREATE TABLE  Persona
(
	K_IDENTIFICACION varchar(10) NOT NULL,
	I_TIPOID varchar(2) NOT NULL,
	N_NOMBRE varchar(100) NOT NULL,
	N_GENERO varchar(1) NOT NULL,
	F_NACIMIENTO DATE NOT NULL
)
;

CREATE TABLE  Reserva
(
	K_RESERVA NUMBER(7) NOT NULL,
	F_FINRESERVA DATE NOT NULL,
	F_INIRESERVA DATE NOT NULL,
	K_NUMAPTO NUMBER(3) NOT NULL,
	K_ESPACIO varchar(5) NULL
)
;

CREATE TABLE  Residente
(
	K_RESIDENTE NUMBER(6) NOT NULL,
	F_INGRESO DATE NULL,
	K_IDENTIFICACION varchar(10) NOT NULL,
	K_NUMAPTO NUMBER(3) NOT NULL
)
;

CREATE TABLE  Responsable
(	
	K_RESPONSABLE NUMBER(5) NOT NULL,
	Q_TELRESIDENCIA varchar(10) NOT NULL,
	Q_TELTRABAJO varchar(10) NULL,
	N_EMAIL varchar(100) NOT NULL,
	K_IDENTIFICACION varchar(10) NOT NULL,
	K_NUMAPTO NUMBER(3) NOT NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks, Triggers */

ALTER TABLE  Apartamento 
 ADD CONSTRAINT PK_Apartamento
	PRIMARY KEY (K_NUMAPTO) 
 USING INDEX
;

ALTER TABLE  Apartamento 
 ADD CONSTRAINT CK_COEFICIENTE CHECK (v_coeficiente > 0)
;

ALTER TABLE  Bloque 
 ADD CONSTRAINT PK_Bloque
	PRIMARY KEY (K_BLOQUE) 
 USING INDEX
;

ALTER TABLE  Concepto 
 ADD CONSTRAINT PK_Concepto
	PRIMARY KEY (K_DETALLE) 
 USING INDEX
;

ALTER TABLE  Concepto 
 ADD CONSTRAINT CK_CONCEPTO CHECK (n_concepto  IN ('cuota de administracion', 'alquiler de salon comunal','cuota extraordinaria', 'otro'))
;

ALTER TABLE  Concepto
 ADD CONSTRAINT CK_VALOR_CON CHECK (v_valorconcep > 0)
;

ALTER TABLE  Concepto
 ADD CONSTRAINT CK_INTERES CHECK (v_interes > 0)
;

ALTER TABLE  Conjunto 
 ADD CONSTRAINT PK_Conjunto
	PRIMARY KEY (K_CONJUNTO) 
 USING INDEX
;

ALTER TABLE  Cuenta_Cobro 
 ADD CONSTRAINT PK_Cuenta_Cobro
	PRIMARY KEY (K_CUENTACOBRO) 
 USING INDEX
;

ALTER TABLE  Espacio_Comun 
 ADD CONSTRAINT PK_Espacio_Comun
	PRIMARY KEY (K_ESPACIO) 
 USING INDEX
;

ALTER TABLE  Espacio_Comun 
 ADD CONSTRAINT CK_TIPOESP CHECK (N_TIPOESP  IN ('COM', 'PAR','GYM'))
;

ALTER TABLE  Espacio_Comun 
 ADD CONSTRAINT CK_ALQUILER_ESP CHECK (v_alquileresp >= 0)
;

ALTER TABLE  Pago 
 ADD CONSTRAINT PK_Pago
	PRIMARY KEY (K_PAGO) 
 USING INDEX
;

ALTER TABLE  Pago 
 ADD CONSTRAINT CK_FORMAPAGO CHECK (n_formapago  IN ('TC', 'EF','CH'))
;

ALTER TABLE  Pago 
 ADD CONSTRAINT CK_ESTADO_PAGO CHECK (N_ESTADO  IN ('ACT', 'PEN','CAN'))
;

ALTER TABLE  Parqueadero 
 ADD CONSTRAINT PK_Parqueadero
	PRIMARY KEY (K_PARQUEADERO) 
 USING INDEX
;

ALTER TABLE  Parqueadero
 ADD CONSTRAINT CK_TIPOPAR CHECK (n_tipopar  IN ('MOT', 'CAR'))
;

ALTER TABLE  Persona 
 ADD CONSTRAINT PK_Persona
	PRIMARY KEY (K_IDENTIFICACION,I_TIPOID) 
 USING INDEX
;

ALTER TABLE  Persona 
 ADD CONSTRAINT CK_GENERO CHECK (n_genero  IN ('F', 'M','X'))
;

ALTER TABLE  Persona 
 ADD CONSTRAINT CK_TIPOID CHECK (i_tipoid  IN ('CC', 'PA','CE', 'NI','OT'))
;

ALTER TABLE  Reserva 
 ADD CONSTRAINT PK_Reserva
	PRIMARY KEY (K_RESERVA) 
 USING INDEX
;

ALTER TABLE  Reserva
 ADD CONSTRAINT CK_FFIN_RES CHECK (f_finreserva >= f_inireserva)
;

ALTER TABLE  Residente 
 ADD CONSTRAINT PK_Residente
	PRIMARY KEY (K_RESIDENTE) 
 USING INDEX
;

ALTER TABLE  Responsable 
 ADD CONSTRAINT PK_Responsable
	PRIMARY KEY (K_RESPONSABLE) 
 USING INDEX
;

/* Create Foreign Key Constraints */

ALTER TABLE  Apartamento 
 ADD CONSTRAINT FK_Apartamento_Bloque
	FOREIGN KEY (K_BLOQUE) REFERENCES  Bloque (K_BLOQUE)
;

ALTER TABLE  Apartamento 
 ADD CONSTRAINT FK_Parqueadero_Apartamento
	FOREIGN KEY (K_PARQUEADERO) REFERENCES  Parqueadero (K_PARQUEADERO)
;

ALTER TABLE  Bloque 
 ADD CONSTRAINT FK_Bloque_Conjunto
	FOREIGN KEY (K_CONJUNTO) REFERENCES  Conjunto (K_CONJUNTO)
;

ALTER TABLE  Concepto 
 ADD CONSTRAINT FK_Concepto_Cuenta_Cobro
	FOREIGN KEY (K_CUENTACOBRO) REFERENCES  Cuenta_Cobro (K_CUENTACOBRO)
;

ALTER TABLE  Cuenta_Cobro 
 ADD CONSTRAINT FK_Cuenta_Apartamento
	FOREIGN KEY (K_NUMAPTO) REFERENCES  Apartamento (K_NUMAPTO)
;

ALTER TABLE  Espacio_Comun 
 ADD CONSTRAINT FK_Espacio_Conjunto
	FOREIGN KEY (K_CONJUNTO) REFERENCES  Conjunto (K_CONJUNTO)
;

ALTER TABLE  Pago 
 ADD CONSTRAINT FK_Cuenta_Pago
	FOREIGN KEY (K_CUENTACOBRO) REFERENCES  Cuenta_Cobro (K_CUENTACOBRO)
;

ALTER TABLE  Reserva 
 ADD CONSTRAINT FK_Apartamento_Reserva
	FOREIGN KEY (K_NUMAPTO) REFERENCES  Apartamento (K_NUMAPTO)
;

ALTER TABLE  Reserva 
 ADD CONSTRAINT FK_Reserva_Espacio_Comun
	FOREIGN KEY (K_ESPACIO) REFERENCES  Espacio_Comun (K_ESPACIO)
;

ALTER TABLE  Residente 
 ADD CONSTRAINT FK_Apartamento_Residente
	FOREIGN KEY (K_NUMAPTO) REFERENCES  Apartamento (K_NUMAPTO)
;

ALTER TABLE  Responsable 
 ADD CONSTRAINT FK_Responsable_Apartamento
	FOREIGN KEY (K_NUMAPTO) REFERENCES  Apartamento (K_NUMAPTO)
;

CREATE SEQUENCE SEQ_PAGO
 START WITH     1
 INCREMENT BY   1
 NOCACHE
 NOCYCLE;

CREATE OR REPLACE TRIGGER TG_INSERTAR_PAGO
  AFTER INSERT ON Cuenta_Cobro
  FOR EACH ROW
BEGIN
  INSERT INTO Pago (K_PAGO, F_PAGO, N_FORMAPAGO, N_ESTADO, K_CUENTACOBRO, V_TOTAL)
  VALUES (SEQ_PAGO.NEXTVAL, NULL, NULL, 'PEN', :NEW.K_CUENTACOBRO, NULL);
END;